class Solution{
    public:
    vector<string> findPath(vector<vector<int>> &mat, int n) {
    
        vector<string> ans;
        string currPath;
        getallPaths(mat,0,0,currPath,ans,n);
        return ans;
        
    }
    
    void getallPaths(vector<vector<int>>& mat, int i, int j, string currPath, vector<string>& ans, int n){
        
        if(i<0 || i>=n || j<0 || j>=n || mat[i][j]<=0){
            return;
        }
        
        if(i==n-1 && j==n-1){
            ans.push_back(currPath);
            return;
        }
        
        mat[i][j] = -1;
        
        getallPaths(mat,i+1,j,currPath+"D",ans,n);
        getallPaths(mat,i,j+1,currPath+"R",ans,n);
        getallPaths(mat,i-1,j,currPath+"U",ans,n);
        getallPaths(mat,i,j-1,currPath+"L",ans,n);
        
        mat[i][j] = 1;
        
        return;
    }
};
