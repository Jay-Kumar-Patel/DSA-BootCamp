class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> ans;
        getAllCombinations(0,0,"",n,ans);
        return ans;
    }
    
    void getAllCombinations(int open, int close, string currCombination, int n, vector<string>& ans){
        
        if(open == close && open == n){
            ans.push_back(currCombination);
            return;
        }
        
        if(open < n)
            getAllCombinations(open+1,close,currCombination+"(",n,ans);
        
        if(close < open)
            getAllCombinations(open,close+1,currCombination+")",n,ans);
        
        return;
    }
};
